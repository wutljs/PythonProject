# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'set_save_address_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QDialog, QMessageBox


class Ui_SetSaveAddressDialog(object):

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.setFixedSize(557, 593)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        Dialog.setMaximumSize(QtCore.QSize(557, 593))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("pictures/txt_downloader_ico.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        Dialog.setWindowIcon(icon)
        Dialog.setStyleSheet("background-image: url(:/background/pictures/太极.jpg);")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(Dialog)
        self.plainTextEdit.setGeometry(QtCore.QRect(250, 80, 341, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plainTextEdit.sizePolicy().hasHeightForWidth())
        self.plainTextEdit.setSizePolicy(sizePolicy)
        self.plainTextEdit.setAcceptDrops(False)
        self.plainTextEdit.setStyleSheet("border-image: url(:/background/pictures/白色透明背景.png);\n"
                                         "font: 87 16pt \"Muyao-Softbrush\";\n"
                                         "color: rgb(255, 0, 0);")
        self.plainTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit.setTabChangesFocus(False)
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(380, 130, 141, 61))
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("font: 87 16pt \"Muyao-Softbrush\";\n"
                                      "color: rgb(255, 0, 0);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.setSaveAddress)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        Dialog.exec_()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "设置小说存储地址"))
        self.plainTextEdit.setPlainText(_translate("Dialog", "道友，请更改秘籍所藏地"))
        self.pushButton.setText(_translate("Dialog", "点击这里"))

    def setSaveAddress(self):
        Dialog = QDialog()
        fd = QFileDialog.getExistingDirectory(Dialog, "选择文件夹", "")
        if fd != '':
            judge = QMessageBox.question(Dialog, "设置小说存储地址", "确认更改?", QMessageBox.Yes | QMessageBox.No,
                                         QMessageBox.Yes)
            if judge == 16384:
                with open('save_address.txt', 'w', encoding='utf-8') as fp:
                    fp.write(fd)

                QMessageBox.information(Dialog, "设置小说存储地址", "更改成功!重启程序后生效!", QMessageBox.Yes,
                                        QMessageBox.Yes)
